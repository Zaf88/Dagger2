// Generated by Dagger (https://dagger.dev).
package com.example.android.dagger.user;

import com.example.usage.UserDataRepository;
import com.example.usage.UserManager;

import javax.inject.Provider;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserDataRepository_Factory implements Factory<UserDataRepository> {
  private final Provider<UserManager> userManagerProvider;

  public UserDataRepository_Factory(Provider<UserManager> userManagerProvider) {
    this.userManagerProvider = userManagerProvider;
  }

  @Override
  public UserDataRepository get() {
    return newInstance(userManagerProvider.get());
  }

  public static UserDataRepository_Factory create(Provider<UserManager> userManagerProvider) {
    return new UserDataRepository_Factory(userManagerProvider);
  }

  public static UserDataRepository newInstance(UserManager userManager) {
    return new UserDataRepository(userManager);
  }
}
